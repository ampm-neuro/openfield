function process_neuralynx
% Create a neurodata folder, with >rat>session sub-folders, then fill 
% subfolders with day#.mat files containing variables: file, eptrials,
% clusters. The day#.mat files are generated by processing raw neuralynx
% files.
%
% Origin (raw neuralynx) files must be organized and named a particular way. The
% organization is 1 folder per subject. This folder contains all session
% files. Session files must be named such that they contain (somewhere) a stage
% abbreviation (i.e., accl, cont, ot, delay) and the last item in the name must
% be the day number (e.g., accl_1 or 2013-11-07_09-39-44_accl_1 or
% accl_2013-11-07_09-39-44_1).
%
% FOR REFERENCE...
% CLUSTERS:
%
% clusters(:,1) contains session cell ID in the form tetrode#.cluster#
% clusters(:,2) contains cluster confidence 3 - 5
% clusters(:,3) contains waveform shape (0 = unknown; 1 = pyram; 2 = inter)
%
% CONTEXT DEFINITIONS:
%context, context number
% b1, 1
% b2, 2
% w1, 3
% w2, 4
% a1, 5
% a2, 6
% o1, 7
% o2, 8
% iti_pre, 9
% iti1, 10
% iti2, 11
% iti3, 12
% iti_post, 13


%path to raw neuralynx files (origin)
%path_origin = '/Volumes/LaCie/PCAlte/';
path_origin = '/Volumes/ampm_PC2Mac/';

%path to neurodata (destination)
path_destination = '/Users/ampm/Documents/MATLAB/PCia/';

%get all the things in neurodata folder...
file_list_subjects = dir(path_origin);

%hard coded erasure of irrelevant directory folders
file_list_subjects([1:7, end]) = [];

%exclude non-folders
file_names_subjects = {file_list_subjects([file_list_subjects(:).isdir])};

%number of folders
length_subjects = size(file_names_subjects{:},1);

%debugging
%{
for i = 1:length_subjects  
   file_list_subjects(i,1).name 
end
%}


%iterate through subjects
for subject = 1:length_subjects

    %print update
    rat = file_names_subjects{:}(subject,1).name

    %get all the things in subject folder...
    file_list_sessions = dir(strcat(path_origin, num2str(file_names_subjects{:}(subject,1).name)));

    %hard coded erasure from file_list_stages of irrelevant directory folders
    file_list_sessions(1:2) = [];

    %exclude non-folders
    file_names_sessions = {file_list_sessions([file_list_sessions(:).isdir])};
    
    %number of folders
    length_sessions = size(file_names_sessions{:},1);
    
    %iterate through session folders
    for session = 1:length_sessions
        
        %current session file name
        session_file = file_names_sessions{:}(session,1).name
        session_number = num2str(session);
        
        if isempty(strfind(session_file, 'rec'))
            continue
        end
        
        %identify stage from session file name
        if ~isempty(strfind(session_file, 'a1'))
            stage = 'object_arrangement';
        elseif ~isempty(strfind(session_file, 'A1'))
            stage = 'object_arrangement';
        else
            stage = 'black_and_white';
        end 
            

        %check if destination has a neurodata folder, if not, create it.
        if ~exist(strcat(path_destination, 'neurodata'), 'dir')
            mkdir(strcat(path_destination, 'neurodata'))
        end

        %check if destination has corresponding rat folder, if not, create it.
        if ~exist(strcat(path_destination, 'neurodata/', rat), 'dir')
            mkdir(strcat(path_destination, 'neurodata/', rat))
        end

        %check if destination has corresponding stage folder, if not, create it.
        if ~exist(strcat(path_destination, 'neurodata/', rat, '/', stage), 'dir')
            mkdir(strcat(path_destination, 'neurodata/', rat, '/', stage))
        end
                
        %
        %check if destination has corresponding data file, if so, continue (skip).
        if exist(strcat(path_destination, 'neurodata/', rat, '/', stage, '/', session_number, '.mat'), 'file')
            continue
        end
        %}
        
        %load session
        [eptrials, clusters, context_ids, session_length] = loadnl(strcat(rat, '/', session_file));
        
        
        clusters

        %origin file
        origin_file = strcat(path_origin, rat, '/', session_file);

        %save session in correct destination folder
        save(strcat(path_destination, 'neurodata/', rat, '/', stage, '/', session_number), 'eptrials', 'clusters', 'context_ids', 'origin_file')

        %clear variables
        clear eptrials
        clear clusters
        clear stem_runs
        clear clusts
        clear origin_file
        clear data
        clear context_ids
        
    end

end

end