function process_neuralynx_CSC
% Create a neurodata folder, with >rat>session sub-folders, then fill 
% subfolders with day#.mat files containing variables: file, eptrials,
% clusters. The day#.mat files are generated by processing raw neuralynx
% files.
%
% Origin (raw neuralynx) files must be organized and named a particular way. The
% organization is 1 folder per subject. This folder contains all session
% files. Session files must be named such that they contain (somewhere) a stage
% abbreviation (i.e., accl, cont, ot, delay) and the last item in the name must
% be the day number (e.g., accl_1 or 2013-11-07_09-39-44_accl_1 or
% accl_2013-11-07_09-39-44_1).
%
% FOR REFERENCE...
% CLUSTERS:
%
% clusters(:,1) contains session cell ID in the form tetrode#.cluster#
% clusters(:,2) contains cluster confidence 1 - 5 (generally just 3-5)
% clusters(:,3) contains waveform shape (0 = unknown; 1 = pyram; 2 = inter;
%                3 = "dip")
% clusters(:,4) contains stability (0 = unstable, fades out or in; 1 =
%                stable)
% clusters(:,5) contains rat cell ID (unique number for that cluster in
%                this rat)
% clusters(:,6) contains "maintained" confidence (same cell as yesterday)
%               (0 = not maintained; 1 = low; 2 = moderate/acceptable; 
%                3= high)
% clusters(:,7) contains hemisphere (0 = Left; 1 = Right)
%
%

%path to raw neuralynx files (origin)
path_origin = '/Volumes/LaCie/PCAlte/';
%path_origin = '/Volumes/New Volume/PC Alt/Subjects_Good Data_edited_ampm/';

%path to neurodata (destination)
path_destination = '/Users/ampm/Documents/MATLAB/';

%get all the things in neurodata folder...
file_list_subjects = dir(path_origin);

%hard coded erasure of irrelevant directory folders
file_list_subjects(1:2) = [];

%exclude non-folders
file_names_subjects = {file_list_subjects([file_list_subjects(:).isdir])};

%number of folders
length_subjects = size(file_names_subjects{:},1);


%names
%file_names_subjects{:}(1:length_subjects,1).name;
%}

%iterate through subjects
for subject = 1:length_subjects %%FIX

    %print update
    rat = file_names_subjects{:}(subject,1).name
    
    %get all the things in subject folder...
    file_list_sessions = dir(strcat(path_origin, num2str(file_names_subjects{:}(subject,1).name)));

    %hard coded erasure from file_list_stages of irrelevant directory folders
    file_list_sessions(1:2) = [];

    %exclude non-folders
    file_names_sessions = {file_list_sessions([file_list_sessions(:).isdir])};
    
    %number of folders
    length_sessions = size(file_names_sessions{:},1);
    
    %iterate through session folders
    for session = 1:length_sessions %%FIX
        
        %current session file name
        session_file = file_names_sessions{:}(session,1).name
        
        %identify stage from session file name
        switch logical(true)
            case ~isempty(strfind(session_file, 'accl')), stage = 'acclimation';
            case ~isempty(strfind(session_file, 'cont')), stage = 'continuous';
            case ~isempty(strfind(session_file, 'ot')), stage = 'overtraining';
            case ~isempty(strfind(session_file, 'del')), stage = 'delay';
                
            otherwise
                warning(strcat('stage not identified for -', session_file))
                continue
        end 
            
        
        %check for clusts file (indicating clustering)
        if exist(strcat(path_origin, rat, '/', session_file, '/clusts.csv'), 'file')
            
            
            %check if destination has a neurodata folder, if not, create it.
            if ~exist(strcat(path_destination, 'neurodata_csc'), 'dir')
                mkdir(strcat(path_destination, 'neurodata_csc'))
            end
            
            %check if destination has corresponding rat folder, if not, create it.
            if ~exist(strcat(path_destination, 'neurodata_csc/', rat), 'dir')
                mkdir(strcat(path_destination, 'neurodata_csc/', rat))
            end
            
            %check if destination has corresponding stage folder, if not, create it.
            if ~exist(strcat(path_destination, 'neurodata_csc/', rat, '/', stage), 'dir')
                mkdir(strcat(path_destination, 'neurodata_csc/', rat, '/', stage))
            end
            
            %session number is the last item (or last two items) of session_file string
            if isempty(str2num(session_file(length(session_file)-1))) %if second-to-last item is not a number
                session_number = session_file(length(session_file)); %use last item
            else %if second-two-last item is a number
                session_number = session_file((length(session_file)-1):length(session_file)); %use last two items
            end
            
            %csc file name
            csc_file = strcat(path_destination, 'neurodata_csc/', rat, '/', stage, '/', session_number);
            
            %non-csc file name
            noncsc_file = strcat(path_destination, 'neurodata/', rat, '/', stage, '/', session_number);
            
            %origin file
            origin_file = strcat(path_origin, rat, '/', session_file);
            
            
            %load session
            if strcmp(stage, 'acclimation')
                
                continue
                
                %change to acclimation folder
                cd('/Users/ampm/Documents/MATLAB/acclimation')
                
                %load
                [eptrials, clusters] = loadnl(strcat(rat, '/', session_file), 1);
                
                %change back
                cd('/Users/ampm/Documents/MATLAB/')
            else
                %load
                [eptrials, clusters] = loadnl(strcat(rat, '/', session_file), 1);
                
                %build stem_runs matrix
                stem_runs = nan(max(eptrials(:,5)), 3);
                
                %fill in stem_runs matrix
                for i = unique(eptrials(:,5))'
                    %entrance time
                        %last stem
                        last_stem = max(eptrials(eptrials(:,5)==i & eptrials(:,6)==3, 1));
                    stem_runs(i,1) = max(eptrials(eptrials(:,5)==i & eptrials(:,6)==1 & eptrials(:,1)<last_stem, 1));
                    
                    %exit time
                        %first true rwd
                        rwd_vis = min(eptrials(eptrials(:,5)==i & ismember(eptrials(:,6), [7 8]) & eptrials(:,1)>stem_runs(i,1),1));
                    stem_runs(i,2) = min(eptrials(eptrials(:,5)==i & eptrials(:,6)==4 & eptrials(:,1)<rwd_vis & eptrials(:,1)>stem_runs(i,1),1));
                end
                
                    %length of run (time)
                    stem_runs(:,3) = stem_runs(:,2) - stem_runs(:,1);
            end


            if ~isempty(clusters)
                %add confidence and cell type columns to clusters
                clusts = csvread(strcat(path_origin, rat, '/', session_file, '/clusts.csv'), 1, 0);
                
                %catch error related to inconsistent clusters and clusts
                if ~isequal(floor(clusters), floor(clusts(clusts(:,1)>0,1)))
                    
                    %report relevant information
                    strcat(path_origin, rat, '/', session_file)
                    clusters
                    clusts
                    
                    %error
                    error('Clusters and clusts.csv are inconsistent. Sort file may be incorrectly labled or there may be a typo in clusts.csv.')
                    
                end
               
                clusters = [clusters clusts(clusts(:,1)>0,2:7)]; %indexing clusts to exclude erroneous rows of zeros that excel occasionally creates
                
            end
            
            
            
            
            %save
            
            if strcmp(stage, 'acclimation')
                %save session in correct destination folder
                save(strcat(path_destination, 'neurodata_csc/', rat, '/', stage, '/', session_number), 'eptrials', 'clusters', 'origin_file')

                %clear variables
                clear eptrials
                clear clusters
                clear clusts
                clear origin_file
                clear data
            else
                %save session in correct destination folder
                save(strcat(path_destination, 'neurodata_csc/', rat, '/', stage, '/', session_number), 'eptrials', 'clusters', 'stem_runs', 'origin_file')

                %clear variables
                clear eptrials
                clear clusters
                clear stem_runs
                clear clusts
                clear origin_file
                clear data
            end
              
        end
  
    end

end

end